plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.example.androiddevchallenge"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose true

        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    packagingOptions {
        // Multiple dependency bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.activity:activity-compose:1.4.0-beta01"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha10"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.5.2"

    implementation("io.coil-kt:coil-compose:1.4.0")

    implementation "com.google.accompanist:accompanist-navigation-material:0.19.0"

    //    Moshi
    implementation("com.squareup.moshi:moshi-kotlin:1.8.0")

//    RXAndroid/RXJava
//    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

//    Because RxAndroid releases are few and far between, it is recommended you also
//    explicitly depend on RxJava's latest version for bug fixes and new features.
//    (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
//    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
//    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.1'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.5.0"
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'

    // Junit
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.0.0")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.0.0")

    // to run JUnit 3/4 tests:
    testImplementation("junit:junit:4.12")
    testImplementation("org.junit.vintage:junit-vintage-engine:4.12.0")

    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}

