package com.example.androiddevchallenge.network.models.data

import com.squareup.moshi.Json

data class ApiRedditPostWrapper(val redditPost: ApiRedditPost)

data class ApiRedditPost(val kind: String? = null, val data: ApiRedditPostData? = null)

data class ApiRedditPostData(
    @Json(name = "approved_at_utc") val approvedAtUtc: String? = null,
    val subreddit: String? = null,
    val selftext: String? = null,
    @Json(name = "author_fullname") val authorFullname: String? = null,
    val saved: Boolean? = null,
    @Json(name = "mod_reason_title") val modReasonTitle: String? = null,
    val gilded: Int? = null,
    val clicked: Boolean? = null,
    val title: String? = null,
    @Json(name = "link_flair_richtext") val linkFlairRichtext: List<ApiLinkFlair>? = null,
    @Json(name = "subreddit_name_prefixed") val subredditNamePrefixed: String? = null,
    val hidden: Boolean? = null,
    val pwls: Int? = null,
    @Json(name = "link_flair_css_class") val linkFlairCssClass: String? = null,
    val downs: Int? = null,
    @Json(name = "thumbnail_height") val thumbnailHeight: String? = null,
    @Json(name = "hide_score") val hideScore: Boolean? = null,
    val name: String? = null,
    val quarantine: Boolean? = null,
    @Json(name  = "link_flair_text_color") val linkFlairTextColor: String? = null,
    @Json(name = "author_flair_background_color") val authorFlairBackgroundColor: String? = null,
    @Json(name = "subreddit_type") val subredditType: String? = null,
    val ups: Int? = null,
    @Json(name = "total_awards_received") val totalAwardsReceived: Int? = null,
    @Json(name = "media_embed") val mediaEmbed: Any? = null,
    @Json(name = "thumbnail_width") val thumbnailWidth: String? = null,
    @Json(name = "author_flair_template_id") val authorFlairTemplateId: String? = null,
    @Json(name = "is_original_content") val isOrigionalContent: String? = null,
    @Json(name = "user_reports") val userReports: List<Any>? = null,
    @Json(name = "secure_media") val secureMedia: String? = null,
    @Json(name = "is_reddit_media_domain") val isRedditMediaDomain: Boolean? = null,
    @Json(name = "is_meta") val isMeta: Boolean? = null,
    val category: String? = null,
    @Json(name = "secure_media_embed") val secureMediaEmbed: Any? = null,
    @Json(name = "link_flair_text") val linkFlairText: String? = null,
    @Json(name = "can_mod_post") val canModPost: Boolean? = null,
    val score: Int? = null,
    @Json(name = "approved_by") val approvedBy: String? = null,
    val thumbnail: String? = null,
    @Json(name = "author_flair_css_class") val authorFlairCssClass: String? = null,
    @Json(name = "steward_reports") val stewardReports: List<Any>? = null,
    @Json(name = "author_flair_richtext") val authorFlairRichtext: List<Any>? = null,
    val gildings: Any? = null,
    @Json(name = "content_categories") val contentCategories: String? = null,
    @Json(name = "is_self") val isSelf: Boolean? = null,
    @Json(name = "mod_note") val modNote: String? = null,
    val created: Long? = null,
    @Json(name = "link_flair_type") val linkFlairType: String? = null,
    val wls: Int? = null,
    @Json(name = "banned_by") val bannedBy: String? = null,
    @Json(name = "author_flair_type") val authorFlairType: String? = null,
    val domain: String? = null,
    @Json(name = "selftext_html") val selftextHtml: String? = null,
    val likes: String? = null,
    @Json(name = "suggested_sort") val suggestedSort: String? = null,
    @Json(name = "banned_at_utc") val bannedAtUtc: String? = null,
    @Json(name = "view_count") val viewCount: Int? = null,
    val archived: Boolean? = null,
    @Json(name = "no_follow") val noFollow: Boolean? = null,
    @Json(name = "is_crosspostable") val isCrosspostable: Boolean? = null,
    val pinned: Boolean? = null,
    @Json(name = "over_18") val over18: Boolean? = null,
    @Json(name = "all_awardings") val all_awardings: List<Any>? = null,
    val awarders: List<Any>? = null,
    @Json(name = "media_only") val mediaOnly: Boolean? = null,
    @Json(name = "link_flair_template_id") val linkFlairTemplateId: String? = null,
    @Json(name = "can_gild") val canGild: Boolean? = null,
    val spoiler: Boolean? = null,
    val locked: Boolean? = null,
    @Json(name = "author_flair_text") val authorFlairText: String? = null,
    val visited: Boolean? = null,
    @Json(name = "num_reports") val num_reports: String? = null,
    @Json(name = "subreddit_id") val subredditId: String? = null,
    @Json(name = "mod_reason_by") val modReasonBy: String? = null,
    @Json(name = "removal_reason") val removalReason: String? = null,
    @Json(name = "link_flair_background_color") val linkFlairBackgroundColor: String? = null,
    val id: String? = null,
    @Json(name = "is_robot_indexable") val isRobotIndexable: Boolean? = null,
    @Json(name = "report_reasons") val reportReasons: String? = null,
    val author: String? = null,
    @Json(name = "discussion_type") val discussionType: String? = null,
    @Json(name = "num_comments") val numComments: Int? = null,
    @Json(name = "send_replies") val sendReplies: Boolean? = null,
    @Json(name = "whitelist_status") val whitelistStatus: String? = null,
    @Json(name = "contest_mode") val contestMode: Boolean? = null,
    @Json(name = "mod_reports") val modReports: List<Any>? = null,
    @Json(name = "author_patreon_flair") val authorPatreonFlair: Boolean? = null,
    @Json(name = "author_flair_text_color") val authorFlairTextColor: String? = null,
    val permalink: String? = null,
    @Json(name = "parent_whitelist_status") val parentWhitelistStatus: String? = null,
    val stickied: Boolean? = null,
    val url: String? = null,
    @Json(name = "created_utc") val createdUtc: Int? = null,
    @Json(name = "num_crossposts") val numCrossposts: Int? = null,
    val media: Any? = null,
    @Json(name = "is_video") val isVideo: Boolean? = null,
    val body: String?
)

data class ApiLinkFlair(val e: String? = null, val t: String? = null)
